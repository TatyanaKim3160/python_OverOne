# # Пользователь (например, специалист по кадрам) вводит фамилии работников фирмы,
# # их должность, дату рождения, название учреждения образования, которое закончил работник, увлечения.
# # После окончания ввода программа выводит перечень фамилий со всеми введенными данными.
# # Далее программа дает возможность получить данные о конкретных людях
# # любым из двух способов на выбор пользователя: вводом фамилии человека либо вводом должности работника.
#
# while True:
#     fio=input('Имя: ')
#     if fio=='n':
#         break
#     position = input('Должность:')
#     date= input("дата рождения: ")
#     educat= input('ВУЗ: ')
#     hobby = input('Увлечение: ')
#
# name_lst=[position,date,educat,hobby]
# print(name_lst)
# # dic={
# #     person_1:{position:pos,
# #               date=dat,
# #               edu=educat,
# #                 hobby=hob}
# # }

print('____________________')
# 1.	Даны два кортежа:
# C_1 = (35, 78,21,37, 2,98, 6, 100, 231)
# C_2 = (45, 21,124,76,5,23,91,234)
# Необходимо определить:
# 1) Сумма элементов какого из кортежей больше и вывести соответствующее
# сообщение на экран (Сумма больше в кортеже - ..)
# 2) Вывести на экран порядковые номера минимальных и максимальных элементов этих кортежей

C_1 = (35, 78, 21, 37, 2, 98, 6, 100, 231)
C_2 = (45, 21, 124, 76, 5, 23, 91, 234)
sm_1 = sum(C_1)
sm_2 = sum(C_2)
if sm_1 > sm_2:
    print("Сумма больше в кортеже - ", C_1, '=', sm_1)
else:
    print("Сумма больше в кортеже - ", C_2, '=', sm_2)

print('Минимальное значение картежа - ', C_1, '=', min(C_1))
print('Максимальное значение картежа - ', C_1, '=', max(C_1))
print('Минимальное значение картежа - ', C_2, '=', min(C_1))
print('Максимальное значение картежа - ', C_2, '=', max(C_1))
print('____________________')

# Создайте словарь из строки ' An apple a day keeps the doctor away'
# следующим образом: в качестве ключей возьмите символы строки,
# а значениями пусть будут числа, соответствующие количеству вхождений данной буквы в строку.
# посчитать кол-во вхождений символов в виде списка

s = dict()
strk = ' An apple a day keeps the doctor away'
for i in strk:
    f = strk.count(i)
    s[i] = f
print(s)
print('____________________')
# 3. Даны два списка чисел. Посчитайте, сколько чисел содержится
# одновременно как в первом списке, так и во втором.
sd = [1, 2, 3, 4, 5, 6, 7, 8]
fg = [3, 4, 5, 60, 9, 88, 22]
a = set(sd).intersection(set(fg))
print(len(a))
print('____________________')

# 4. Напишите программу, демонстрирующую работу try\except\finally
try:
    var = 10
    print(var + 'hello')
    print(var / 2)
except ZeroDivisionError:
    print('Divided by zero')
except (ValueError, TypeError):
    print('Error occurred')
print('____________________')
# Есть текстовый файл, допустим какая-то база данных с публикациям
# в Инстаграмм случайных 10 человек (Человек: количество).
# Нужно вывести эти пары в порядке возрастания на экран и также
# отдельно вывести у кого наибольшее и у кого наименьшее значение публикаций
with open('insta.txt', 'w', encoding='utf-8') as insta:
    insta.write('Петров 10\nСидоров 7\nМалинин 45\nСмирнова 67')
with open('insta.txt', 'r', encoding='utf-8') as insta:
    s = insta.readlines()
print('-',s)

dic = dict()
fg = []
gh = []
for j in range(len(s)):
    a = s[j].split(' ')
    print('43',a)
    fg.append(a[0])
    gh.append(a[1])
    # gh=gh.replace("\n","")
    dic = dict(zip(fg, gh))
print(dic)
